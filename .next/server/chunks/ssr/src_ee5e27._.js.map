{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/ArticleShort.tsx"],"sourcesContent":["'use client'\nimport parse from 'html-react-parser'\nimport Image from 'next/image'\n\nimport { Button } from './Button'\nimport { Label } from './Label'\n\ninterface IProductArticle extends IArticleShort {\n  image?: IDataImage\n}\n\nexport const ArticleShort = ({\n  data,\n  reverse,\n  subHead,\n}: {\n  reverse: boolean\n  subHead?: string\n  data: IProductArticle\n}) => {\n  const image = data.shortImage?.url || data.image?.url || ''\n  return (\n    <div className={'grid grid-cols-1 md:grid-cols-2 gap-7.5 md:gap-12.5 mb-[70px]'}>\n      <div className={reverse ? 'md:order-last' : ''}>\n        <div className={'pt-[100%] relative overflow-hidden rounded-lg bg-lightAccent'}>\n          <Image src={image} className={'object-cover object-center'} fill alt={data.title} />\n        </div>\n      </div>\n      <div className={'flex items-center'}>\n        <div>\n          {!!subHead?.length && (\n            <label className={'block text-accent text-3xl md:text-6xl mb-5'}>{subHead}</label>\n          )}\n          <h2 className={'text-5xl md:text-8xl mb-5 md:mb-17 md:flex items-end gap-2.5'}>\n            <span className={'block'}>{data.title}</span>\n            {!!data.label && data.label.map((item) => <Label key={item.text} big data={item} />)}\n          </h2>\n          <div className={'text-sm md:text-3xl mb-7.5 md:mb-17 opacity-70'}>\n            {parse(data.shortContent)}\n          </div>\n          <Button text={'discover'} href={`/article/${data.slug}`} />\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AAJA;AADA;;;;;;AAWO,MAAM,eAAe,CAAC,EAC3B,IAAI,EACJ,OAAO,EACP,OAAO,EAKR;IACC,MAAM,QAAQ,KAAK,UAAU,EAAE,OAAO,KAAK,KAAK,EAAE,OAAO;IACzD,qBACE,8OAAC;QAAI,WAAW;;0BACd,8OAAC;gBAAI,WAAW,UAAU,kBAAkB;0BAC1C,cAAA,8OAAC;oBAAI,WAAW;8BACd,cAAA,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK;wBAAO,WAAW;wBAA8B,IAAI;wBAAC,KAAK,KAAK,KAAK;;;;;;;;;;;;;;;;0BAGpF,8OAAC;gBAAI,WAAW;0BACd,cAAA,8OAAC;;wBACE,CAAC,CAAC,SAAS,wBACV,8OAAC;4BAAM,WAAW;sCAAgD;;;;;;sCAEpE,8OAAC;4BAAG,WAAW;;8CACb,8OAAC;oCAAK,WAAW;8CAAU,KAAK,KAAK;;;;;;gCACpC,CAAC,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,qBAAS,8OAAC,2HAAA,CAAA,QAAK;wCAAiB,GAAG;wCAAC,MAAM;uCAArB,KAAK,IAAI;;;;;;;;;;;sCAEjE,8OAAC;4BAAI,WAAW;sCACb,CAAA,GAAA,wKAAA,CAAA,UAAK,AAAD,EAAE,KAAK,YAAY;;;;;;sCAE1B,8OAAC,4HAAA,CAAA,SAAM;4BAAC,MAAM;4BAAY,MAAM,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;AAKjE"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/DescrBlock.tsx"],"sourcesContent":["import parse from 'html-react-parser'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { useMediaQuery } from 'react-responsive'\n\nexport interface IDescrBlock {\n  contentText: string\n  cta?: IDataLink\n  icon?: IDataImage\n}\n\nexport const DescrBlock = ({ data }: { data: IDescrBlock }) => {\n  const isDesktopMedia = useMediaQuery({\n    query: '(min-width: 1024px)',\n  })\n\n  return (\n    <div className={'px-7.5 py-8.5 md:p-12.5 bg-lightDark rounded-big'}>\n      {data?.icon && (\n        <Image\n          className={'mb-6 md:mb-11'}\n          src={data.icon.url}\n          width={isDesktopMedia ? 78 : 59}\n          height={isDesktopMedia ? 68 : 52}\n          alt={'asd'}\n        />\n      )}\n      <div className={'text-sm md:text-3xl opacity-70 mb-6.5 md:mb-12.5'}>\n        {parse(data.contentText)}\n      </div>\n\n      {data.cta && (\n        <Link className={'text-accent text-xs font-bold md:text-lg'} href={data.cta.link}>\n          {data.cta.text}\n        </Link>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAHA;;;;;;AAWO,MAAM,aAAa,CAAC,EAAE,IAAI,EAAyB;IACxD,MAAM,iBAAiB,CAAA,GAAA,2JAAA,CAAA,gBAAa,AAAD,EAAE;QACnC,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAW;;YACb,MAAM,sBACL,8OAAC,6HAAA,CAAA,UAAK;gBACJ,WAAW;gBACX,KAAK,KAAK,IAAI,CAAC,GAAG;gBAClB,OAAO,iBAAiB,KAAK;gBAC7B,QAAQ,iBAAiB,KAAK;gBAC9B,KAAK;;;;;;0BAGT,8OAAC;gBAAI,WAAW;0BACb,CAAA,GAAA,wKAAA,CAAA,UAAK,AAAD,EAAE,KAAK,WAAW;;;;;;YAGxB,KAAK,GAAG,kBACP,8OAAC,4JAAA,CAAA,UAAI;gBAAC,WAAW;gBAA4C,MAAM,KAAK,GAAG,CAAC,IAAI;0BAC7E,KAAK,GAAG,CAAC,IAAI;;;;;;;;;;;;AAKxB"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/Slider.tsx"],"sourcesContent":["'use client'\nimport { useMediaQuery } from 'react-responsive'\nimport { Swiper, SwiperSlide } from 'swiper/react'\n\nimport { DescrBlock } from './DescrBlock'\n\nexport const Slider = ({ data }: { data: IDescriptionBlock[] }) => {\n  const isDesktopMedia = useMediaQuery({\n    query: '(min-width: 1024px)',\n  })\n  return (\n    <Swiper\n      spaceBetween={isDesktopMedia ? 50 : 20}\n      style={{\n        overflow: 'visible',\n      }}\n      slidesPerView={isDesktopMedia ? 3 : 1.5}\n    >\n      {data.map((item, idx) => (\n        <SwiperSlide key={idx}>\n          <DescrBlock data={item} />\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAHA;AADA;;;;;AAMO,MAAM,SAAS,CAAC,EAAE,IAAI,EAAiC;IAC5D,MAAM,iBAAiB,CAAA,GAAA,2JAAA,CAAA,gBAAa,AAAD,EAAE;QACnC,OAAO;IACT;IACA,qBACE,8OAAC,0IAAA,CAAA,SAAM;QACL,cAAc,iBAAiB,KAAK;QACpC,OAAO;YACL,UAAU;QACZ;QACA,eAAe,iBAAiB,IAAI;kBAEnC,KAAK,GAAG,CAAC,CAAC,MAAM,oBACf,8OAAC,0IAAA,CAAA,cAAW;0BACV,cAAA,8OAAC,gIAAA,CAAA,aAAU;oBAAC,MAAM;;;;;;eADF;;;;;;;;;;AAM1B"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/TextCta.tsx"],"sourcesContent":["import parse from 'html-react-parser'\n\nimport { Container } from './Container'\nimport { LinkMore } from './LinkMore'\n\nexport const TextCta = ({ data }: { data: { text: string; cta?: IDataLink } }) => {\n  return (\n    <section className={'py-[80px] md:py-[132px]'}>\n      <Container size={'sm'}>\n        <div className={'text-xl md:text-6xl mb-7.5 md:mb-10 opacity-70'}>{parse(data.text)}</div>\n        {!!data.cta && <LinkMore text={data.cta.text} href={data.cta.link} />}\n      </Container>\n    </section>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AAHA;;;;;AAKO,MAAM,UAAU,CAAC,EAAE,IAAI,EAA+C;IAC3E,qBACE,8OAAC;QAAQ,WAAW;kBAClB,cAAA,8OAAC,+HAAA,CAAA,YAAS;YAAC,MAAM;;8BACf,8OAAC;oBAAI,WAAW;8BAAmD,CAAA,GAAA,wKAAA,CAAA,UAAK,AAAD,EAAE,KAAK,IAAI;;;;;;gBACjF,CAAC,CAAC,KAAK,GAAG,kBAAI,8OAAC,8HAAA,CAAA,WAAQ;oBAAC,MAAM,KAAK,GAAG,CAAC,IAAI;oBAAE,MAAM,KAAK,GAAG,CAAC,IAAI;;;;;;;;;;;;;;;;;AAIzE"}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/DynamicContent.tsx"],"sourcesContent":["'use client'\nimport parse from 'html-react-parser'\n\nimport { ArticleShort } from './ArticleShort'\nimport { Container } from './Container'\nimport { Galery } from './Galery'\nimport { LogoSlider } from './LogoSlider'\nimport { Products } from './Products'\nimport { Slider } from './Slider'\nimport { TextCta } from './TextCta'\n\nexport const DynamicContent = ({ data }: { data: any[] }) => {\n  return (\n    <>\n      {data.map((item, idx: number) => {\n        if (item.__component === 'content.cta-block') {\n          return <TextCta key={item.__component + idx} data={item} />\n        }\n        if (item.__component === 'content.short-artciles') {\n          return (\n            <section key={item.__component + idx}>\n              <Container size={'lg'}>\n                {item.articles.map((article: any, idxArticle: number) => (\n                  <ArticleShort\n                    key={article.title + idxArticle}\n                    data={article}\n                    reverse={!!(idxArticle % 2)}\n                  />\n                ))}\n              </Container>\n            </section>\n          )\n        }\n        // if (item.__component === 'content.logo-carousel') {\n        //   return <LogoSlider data={item.logo} key={item.__component + idx} />\n        // }\n        // if (item.__component === 'content.content-item') {\n        //   return (\n        //     <section className={'py-[160px]'} key={item.__component + idx}>\n        //       {(!!item.title?.length || !!item.contentText?.length) && (\n        //         <Container size={'sm'}>\n        //           {!!item.title?.length && <h2 className={'text-8xl mb-17'}>{item.title}</h2>}\n        //           {!!item.contentText?.length && (\n        //             <div className={'text-sm md:text-3xl mb-10 opacity-70'}>\n        //               {parse(item.contentText)}\n        //             </div>\n        //           )}\n        //         </Container>\n        //       )}\n        //       {!!item.galery?.length && <Galery data={item.galery} />}\n        //     </section>\n        //   )\n        // }\n        if (item.__component === 'content.description-block') {\n          return (\n            <section key={item.__component + idx} className={'pt-[80px] md:pt-[132px]'}>\n              <Container size={'lg'}>\n                <Slider data={item.block} />\n              </Container>\n            </section>\n          )\n        }\n        // if (item.__component === 'content.compare-table') {\n        //   return (\n        //     <section key={item.__component + idx} className={'py-17'}>\n        //       <Container size={'lg'}>\n        //         {item.title?.length && <h2 className={'text-8xl mb-13 text-left'}>{item.title}</h2>}\n        //         <Products data={item.products} />\n        //       </Container>\n        //     </section>\n        //   )\n        // }\n        return null\n      })}\n    </>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAIA;AACA;AATA;;;;;;AAWO,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAAmB;IACtD,qBACE;kBACG,KAAK,GAAG,CAAC,CAAC,MAAM;YACf,IAAI,KAAK,WAAW,KAAK,qBAAqB;gBAC5C,qBAAO,8OAAC,6HAAA,CAAA,UAAO;oBAA8B,MAAM;mBAA9B,KAAK,WAAW,GAAG;;;;;YAC1C;YACA,IAAI,KAAK,WAAW,KAAK,0BAA0B;gBACjD,qBACE,8OAAC;8BACC,cAAA,8OAAC,+HAAA,CAAA,YAAS;wBAAC,MAAM;kCACd,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAc,2BAChC,8OAAC,kIAAA,CAAA,eAAY;gCAEX,MAAM;gCACN,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC;+BAFrB,QAAQ,KAAK,GAAG;;;;;;;;;;mBAJf,KAAK,WAAW,GAAG;;;;;YAYrC;YACA,sDAAsD;YACtD,wEAAwE;YACxE,IAAI;YACJ,qDAAqD;YACrD,aAAa;YACb,sEAAsE;YACtE,mEAAmE;YACnE,kCAAkC;YAClC,yFAAyF;YACzF,6CAA6C;YAC7C,uEAAuE;YACvE,0CAA0C;YAC1C,qBAAqB;YACrB,eAAe;YACf,uBAAuB;YACvB,WAAW;YACX,iEAAiE;YACjE,iBAAiB;YACjB,MAAM;YACN,IAAI;YACJ,IAAI,KAAK,WAAW,KAAK,6BAA6B;gBACpD,qBACE,8OAAC;oBAAqC,WAAW;8BAC/C,cAAA,8OAAC,+HAAA,CAAA,YAAS;wBAAC,MAAM;kCACf,cAAA,8OAAC,4HAAA,CAAA,SAAM;4BAAC,MAAM,KAAK,KAAK;;;;;;;;;;;mBAFd,KAAK,WAAW,GAAG;;;;;YAMrC;YACA,sDAAsD;YACtD,aAAa;YACb,iEAAiE;YACjE,gCAAgC;YAChC,+FAA+F;YAC/F,4CAA4C;YAC5C,qBAAqB;YACrB,iBAAiB;YACjB,MAAM;YACN,IAAI;YACJ,OAAO;QACT;;AAGN"}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/Top.tsx"],"sourcesContent":["'use client'\n\nimport parse from 'html-react-parser'\nimport Image from 'next/image'\nimport { useMediaQuery } from 'react-responsive'\nimport { Swiper, SwiperSlide } from 'swiper/react'\n\nimport { Button } from './Button'\nimport { Container } from './Container'\nimport { Slider } from './Slider'\nimport { SmallCard } from './SmallCard'\n\nexport const Top = ({\n  title,\n  items,\n  content = '',\n  bigContent = '',\n  label = '',\n  blocks,\n  button = false,\n}: {\n  title: string\n  items?: IShortProduct[]\n  button?: boolean\n  content?: string\n  bigContent?: string\n  blocks?: IDescriptionBlock[]\n  label?: string\n}) => {\n  const isDesktopMedia = useMediaQuery({\n    query: '(min-width: 1024px)',\n  })\n\n  return (\n    <div>\n      <div className={'absolute w-full top-0 left-0 right-0 -z-10'}>\n        <Image src={'/assets/top-background.svg'} fill alt={'Top background squares'} />\n        <video className={'w-full'} autoPlay muted loop id={'animationVideo'}>\n          <source src={'/assets/animation.mp4'} type={'video/mp4'} />\n        </video>\n        <Image src={'/assets/shadow-gradient.svg'} fill alt={'Top background squares'} />\n      </div>\n      <Container size={'lg'}>\n        <div className={'pt-[220px] md:pt-[341px] pb-8.5 relative z-20'}>\n          <h1 className={'text-6xl font-medium md:text-big mb-7.5'}>{title}</h1>\n          {!!label?.length && (\n            <label className={'block text-accent text-6xl mb-[200px]'}>{label}</label>\n          )}\n          {!!bigContent?.length && (\n            <div className={'text-xl md:text-6xl mb-10 max-w-[1200px]'}>{parse(bigContent)}</div>\n          )}\n          {!!content?.length && (\n            <div className={'text-6xl mb-10 max-w-[700px]'}>{parse(content)}</div>\n          )}\n          {button && <Button text={'discover products'} />}\n          {!!items?.length && (\n            <div className={'mt-[76px] md:mt-[200px]'}>\n              <Swiper\n                spaceBetween={0}\n                style={{\n                  overflow: 'visible',\n                }}\n                slidesPerView={isDesktopMedia ? 6 : 2.5}\n              >\n                {items.map((item: IShortProduct) => (\n                  <SwiperSlide key={item.title}>\n                    <SmallCard data={item} />\n                  </SwiperSlide>\n                ))}\n              </Swiper>\n            </div>\n          )}\n          {blocks && <Slider data={blocks} />}\n        </div>\n      </Container>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AANA;AAFA;AAFA;;;;;;;;;;AAYO,MAAM,MAAM,CAAC,EAClB,KAAK,EACL,KAAK,EACL,UAAU,EAAE,EACZ,aAAa,EAAE,EACf,QAAQ,EAAE,EACV,MAAM,EACN,SAAS,KAAK,EASf;IACC,MAAM,iBAAiB,CAAA,GAAA,2JAAA,CAAA,gBAAa,AAAD,EAAE;QACnC,OAAO;IACT;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAW;;kCACd,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK;wBAA8B,IAAI;wBAAC,KAAK;;;;;;kCACpD,8OAAC;wBAAM,WAAW;wBAAU,QAAQ;wBAAC,KAAK;wBAAC,IAAI;wBAAC,IAAI;kCAClD,cAAA,8OAAC;4BAAO,KAAK;4BAAyB,MAAM;;;;;;;;;;;kCAE9C,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK;wBAA+B,IAAI;wBAAC,KAAK;;;;;;;;;;;;0BAEvD,8OAAC,+HAAA,CAAA,YAAS;gBAAC,MAAM;0BACf,cAAA,8OAAC;oBAAI,WAAW;;sCACd,8OAAC;4BAAG,WAAW;sCAA4C;;;;;;wBAC1D,CAAC,CAAC,OAAO,wBACR,8OAAC;4BAAM,WAAW;sCAA0C;;;;;;wBAE7D,CAAC,CAAC,YAAY,wBACb,8OAAC;4BAAI,WAAW;sCAA6C,CAAA,GAAA,wKAAA,CAAA,UAAK,AAAD,EAAE;;;;;;wBAEpE,CAAC,CAAC,SAAS,wBACV,8OAAC;4BAAI,WAAW;sCAAiC,CAAA,GAAA,wKAAA,CAAA,UAAK,AAAD,EAAE;;;;;;wBAExD,wBAAU,8OAAC,4HAAA,CAAA,SAAM;4BAAC,MAAM;;;;;;wBACxB,CAAC,CAAC,OAAO,wBACR,8OAAC;4BAAI,WAAW;sCACd,cAAA,8OAAC,0IAAA,CAAA,SAAM;gCACL,cAAc;gCACd,OAAO;oCACL,UAAU;gCACZ;gCACA,eAAe,iBAAiB,IAAI;0CAEnC,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,0IAAA,CAAA,cAAW;kDACV,cAAA,8OAAC,+HAAA,CAAA,YAAS;4CAAC,MAAM;;;;;;uCADD,KAAK,KAAK;;;;;;;;;;;;;;;wBAOnC,wBAAU,8OAAC,4HAAA,CAAA,SAAM;4BAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;AAKnC"}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}