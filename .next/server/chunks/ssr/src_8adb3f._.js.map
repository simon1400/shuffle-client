{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/DescrBlock.tsx"],"sourcesContent":["import parse from 'html-react-parser'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { useMediaQuery } from 'react-responsive'\n\nexport interface IDescrBlock {\n  contentText: string\n  cta?: IDataLink\n  icon?: IDataImage\n}\n\nexport const DescrBlock = ({ data }: { data: IDescrBlock }) => {\n  const isDesktopMedia = useMediaQuery({\n    query: '(min-width: 1024px)',\n  })\n\n  return (\n    <div className={'px-7.5 py-8.5 md:p-12.5 bg-lightDark rounded-big'}>\n      {data?.icon && (\n        <Image\n          className={'mb-6 md:mb-11'}\n          src={data.icon.url}\n          width={isDesktopMedia ? 78 : 59}\n          height={isDesktopMedia ? 68 : 52}\n          alt={'asd'}\n        />\n      )}\n      <div className={'text-sm md:text-3xl opacity-70 mb-6.5 md:mb-12.5'}>\n        {parse(data.contentText)}\n      </div>\n\n      {data.cta && (\n        <Link className={'text-accent text-xs font-bold md:text-lg'} href={data.cta.link}>\n          {data.cta.text}\n        </Link>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAHA;;;;;;AAWO,MAAM,aAAa,CAAC,EAAE,IAAI,EAAyB;IACxD,MAAM,iBAAiB,CAAA,GAAA,2JAAA,CAAA,gBAAa,AAAD,EAAE;QACnC,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAW;;YACb,MAAM,sBACL,8OAAC,6HAAA,CAAA,UAAK;gBACJ,WAAW;gBACX,KAAK,KAAK,IAAI,CAAC,GAAG;gBAClB,OAAO,iBAAiB,KAAK;gBAC7B,QAAQ,iBAAiB,KAAK;gBAC9B,KAAK;;;;;;0BAGT,8OAAC;gBAAI,WAAW;0BACb,CAAA,GAAA,wKAAA,CAAA,UAAK,AAAD,EAAE,KAAK,WAAW;;;;;;YAGxB,KAAK,GAAG,kBACP,8OAAC,4JAAA,CAAA,UAAI;gBAAC,WAAW;gBAA4C,MAAM,KAAK,GAAG,CAAC,IAAI;0BAC7E,KAAK,GAAG,CAAC,IAAI;;;;;;;;;;;;AAKxB"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/Slider.tsx"],"sourcesContent":["'use client'\nimport { useMediaQuery } from 'react-responsive'\nimport { Swiper, SwiperSlide } from 'swiper/react'\n\nimport { DescrBlock } from './DescrBlock'\n\nexport const Slider = ({ data }: { data: IDescriptionBlock[] }) => {\n  const isDesktopMedia = useMediaQuery({\n    query: '(min-width: 1024px)',\n  })\n  return (\n    <Swiper\n      spaceBetween={isDesktopMedia ? 50 : 20}\n      style={{\n        overflow: 'visible',\n      }}\n      slidesPerView={isDesktopMedia ? 3 : 1.5}\n    >\n      {data.map((item, idx) => (\n        <SwiperSlide key={idx}>\n          <DescrBlock data={item} />\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAHA;AADA;;;;;AAMO,MAAM,SAAS,CAAC,EAAE,IAAI,EAAiC;IAC5D,MAAM,iBAAiB,CAAA,GAAA,2JAAA,CAAA,gBAAa,AAAD,EAAE;QACnC,OAAO;IACT;IACA,qBACE,8OAAC,0IAAA,CAAA,SAAM;QACL,cAAc,iBAAiB,KAAK;QACpC,OAAO;YACL,UAAU;QACZ;QACA,eAAe,iBAAiB,IAAI;kBAEnC,KAAK,GAAG,CAAC,CAAC,MAAM,oBACf,8OAAC,0IAAA,CAAA,cAAW;0BACV,cAAA,8OAAC,gIAAA,CAAA,aAAU;oBAAC,MAAM;;;;;;eADF;;;;;;;;;;AAM1B"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/Top.tsx"],"sourcesContent":["'use client'\n\nimport parse from 'html-react-parser'\nimport Image from 'next/image'\nimport { useMediaQuery } from 'react-responsive'\nimport { Swiper, SwiperSlide } from 'swiper/react'\n\nimport { Button } from './Button'\nimport { Container } from './Container'\nimport { Slider } from './Slider'\nimport { SmallCard } from './SmallCard'\n\nexport const Top = ({\n  title,\n  items,\n  content = '',\n  bigContent = '',\n  label = '',\n  blocks,\n  button = false,\n}: {\n  title: string\n  items?: IShortProduct[]\n  button?: boolean\n  content?: string\n  bigContent?: string\n  blocks?: IDescriptionBlock[]\n  label?: string\n}) => {\n  const isDesktopMedia = useMediaQuery({\n    query: '(min-width: 1024px)',\n  })\n\n  return (\n    <div>\n      <div className={'absolute w-full top-0 left-0 right-0 -z-10'}>\n        <Image src={'/assets/top-background.svg'} fill alt={'Top background squares'} />\n        <video className={'w-full'} autoPlay muted loop id={'animationVideo'}>\n          <source src={'/assets/animation.mp4'} type={'video/mp4'} />\n        </video>\n        <Image src={'/assets/shadow-gradient.svg'} fill alt={'Top background squares'} />\n      </div>\n      <Container size={'lg'}>\n        <div className={'pt-[220px] md:pt-[341px] pb-8.5 relative z-20'}>\n          <h1 className={'text-6xl font-medium md:text-big mb-7.5'}>{title}</h1>\n          {!!label?.length && (\n            <label className={'block text-accent text-6xl mb-[200px]'}>{label}</label>\n          )}\n          {!!bigContent?.length && (\n            <div className={'text-xl md:text-6xl mb-10 max-w-[1200px]'}>{parse(bigContent)}</div>\n          )}\n          {!!content?.length && (\n            <div className={'text-6xl mb-10 max-w-[700px]'}>{parse(content)}</div>\n          )}\n          {button && <Button text={'discover products'} />}\n          {!!items?.length && (\n            <div className={'mt-[76px] md:mt-[200px]'}>\n              <Swiper\n                spaceBetween={0}\n                style={{\n                  overflow: 'visible',\n                }}\n                slidesPerView={isDesktopMedia ? 6 : 2.5}\n              >\n                {items.map((item: IShortProduct) => (\n                  <SwiperSlide key={item.title}>\n                    <SmallCard data={item} />\n                  </SwiperSlide>\n                ))}\n              </Swiper>\n            </div>\n          )}\n          {blocks && <Slider data={blocks} />}\n        </div>\n      </Container>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AANA;AAFA;AAFA;;;;;;;;;;AAYO,MAAM,MAAM,CAAC,EAClB,KAAK,EACL,KAAK,EACL,UAAU,EAAE,EACZ,aAAa,EAAE,EACf,QAAQ,EAAE,EACV,MAAM,EACN,SAAS,KAAK,EASf;IACC,MAAM,iBAAiB,CAAA,GAAA,2JAAA,CAAA,gBAAa,AAAD,EAAE;QACnC,OAAO;IACT;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAW;;kCACd,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK;wBAA8B,IAAI;wBAAC,KAAK;;;;;;kCACpD,8OAAC;wBAAM,WAAW;wBAAU,QAAQ;wBAAC,KAAK;wBAAC,IAAI;wBAAC,IAAI;kCAClD,cAAA,8OAAC;4BAAO,KAAK;4BAAyB,MAAM;;;;;;;;;;;kCAE9C,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK;wBAA+B,IAAI;wBAAC,KAAK;;;;;;;;;;;;0BAEvD,8OAAC,+HAAA,CAAA,YAAS;gBAAC,MAAM;0BACf,cAAA,8OAAC;oBAAI,WAAW;;sCACd,8OAAC;4BAAG,WAAW;sCAA4C;;;;;;wBAC1D,CAAC,CAAC,OAAO,wBACR,8OAAC;4BAAM,WAAW;sCAA0C;;;;;;wBAE7D,CAAC,CAAC,YAAY,wBACb,8OAAC;4BAAI,WAAW;sCAA6C,CAAA,GAAA,wKAAA,CAAA,UAAK,AAAD,EAAE;;;;;;wBAEpE,CAAC,CAAC,SAAS,wBACV,8OAAC;4BAAI,WAAW;sCAAiC,CAAA,GAAA,wKAAA,CAAA,UAAK,AAAD,EAAE;;;;;;wBAExD,wBAAU,8OAAC,4HAAA,CAAA,SAAM;4BAAC,MAAM;;;;;;wBACxB,CAAC,CAAC,OAAO,wBACR,8OAAC;4BAAI,WAAW;sCACd,cAAA,8OAAC,0IAAA,CAAA,SAAM;gCACL,cAAc;gCACd,OAAO;oCACL,UAAU;gCACZ;gCACA,eAAe,iBAAiB,IAAI;0CAEnC,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,0IAAA,CAAA,cAAW;kDACV,cAAA,8OAAC,+HAAA,CAAA,YAAS;4CAAC,MAAM;;;;;;uCADD,KAAK,KAAK;;;;;;;;;;;;;;;wBAOnC,wBAAU,8OAAC,4HAAA,CAAA,SAAM;4BAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;AAKnC"}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}