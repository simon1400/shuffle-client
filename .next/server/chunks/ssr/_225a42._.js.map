{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/DynamicContent.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DynamicContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DynamicContent() from the server but DynamicContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/DynamicContent.tsx <module evaluation>\",\n    \"DynamicContent\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,mEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/DynamicContent.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DynamicContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DynamicContent() from the server but DynamicContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/DynamicContent.tsx\",\n    \"DynamicContent\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+CACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/Top.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Top = registerClientReference(\n    function() { throw new Error(\"Attempted to call Top() from the server but Top is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Top.tsx <module evaluation>\",\n    \"Top\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,MAAM,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,wDACA"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/Top.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Top = registerClientReference(\n    function() { throw new Error(\"Attempted to call Top() from the server but Top is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Top.tsx\",\n    \"Top\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,MAAM,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,oCACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/fetch/homepage.ts"],"sourcesContent":["import qs from 'qs'\n\nimport { Axios } from '../lib/api'\n\nexport interface IDataHomepage {\n  title: string\n  products: IShortProduct[]\n  dynamicContent: any\n}\n\nexport interface IMetaDataHomepage {\n  title: string\n  metaData?: IMetaData\n}\n\nexport const getHomepage = async () => {\n  const query = qs.stringify(\n    {\n      fields: ['title'],\n      populate: {\n        products: {\n          fields: ['title', 'slug', 'description'],\n          populate: {\n            shortIcon: {\n              fields: ['url'],\n            },\n            label: {\n              fields: ['text', 'hexColor', 'invertText'],\n            },\n          },\n        },\n        dynamicContent: {\n          on: {\n            'content.cta-block': {\n              populate: '*',\n            },\n            'content.short-artciles': {\n              populate: {\n                articles: {\n                  fields: ['title', 'shortContent', 'slug'],\n                  populate: {\n                    shortImage: {\n                      fields: ['url'],\n                    },\n                  },\n                },\n              },\n            },\n            'content.logo-carousel': {\n              populate: {\n                logo: {\n                  fields: ['url'],\n                },\n              },\n            },\n            'content.description-block': {\n              populate: {\n                block: {\n                  fields: ['contentText'],\n                  populate: {\n                    icon: {\n                      fields: ['url'],\n                    },\n                    cta: {\n                      fields: ['text', 'link'],\n                    },\n                  },\n                },\n              },\n            },\n            'content.content-item': {\n              fields: ['title', 'contentText'],\n              populate: {\n                galery: {\n                  fields: ['url'],\n                },\n              },\n            },\n            'content.compare-table': {\n              fields: ['title'],\n              populate: {\n                products: {\n                  fields: ['title', 'description', 'slug'],\n                  populate: {\n                    label: {\n                      fields: ['text', 'hexColor', 'invertText'],\n                    },\n                    shortIcon: {\n                      fields: ['url'],\n                    },\n                    Parameters: {\n                      fields: ['text', 'has'],\n                      populate: '*',\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    {\n      encodeValuesOnly: true, // prettify URL\n    },\n  )\n\n  const data: IDataHomepage = await Axios.get(`/api/homepage?${query}`)\n  return data\n}\n\nexport const getHomepageMeta = async () => {\n  const query = qs.stringify(\n    {\n      fields: ['title'],\n      populate: {\n        metaData: {\n          fields: ['title', 'description'],\n          populate: {\n            ogImage: {\n              fields: ['url'],\n            },\n          },\n        },\n      },\n    },\n    {\n      encodeValuesOnly: true, // prettify URL\n    },\n  )\n\n  const data: IMetaDataHomepage = await Axios.get(`/api/homepage?${query}`)\n  return data\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAeO,MAAM,cAAc;IACzB,MAAM,QAAQ,kIAAA,CAAA,UAAE,CAAC,SAAS,CACxB;QACE,QAAQ;YAAC;SAAQ;QACjB,UAAU;YACR,UAAU;gBACR,QAAQ;oBAAC;oBAAS;oBAAQ;iBAAc;gBACxC,UAAU;oBACR,WAAW;wBACT,QAAQ;4BAAC;yBAAM;oBACjB;oBACA,OAAO;wBACL,QAAQ;4BAAC;4BAAQ;4BAAY;yBAAa;oBAC5C;gBACF;YACF;YACA,gBAAgB;gBACd,IAAI;oBACF,qBAAqB;wBACnB,UAAU;oBACZ;oBACA,0BAA0B;wBACxB,UAAU;4BACR,UAAU;gCACR,QAAQ;oCAAC;oCAAS;oCAAgB;iCAAO;gCACzC,UAAU;oCACR,YAAY;wCACV,QAAQ;4CAAC;yCAAM;oCACjB;gCACF;4BACF;wBACF;oBACF;oBACA,yBAAyB;wBACvB,UAAU;4BACR,MAAM;gCACJ,QAAQ;oCAAC;iCAAM;4BACjB;wBACF;oBACF;oBACA,6BAA6B;wBAC3B,UAAU;4BACR,OAAO;gCACL,QAAQ;oCAAC;iCAAc;gCACvB,UAAU;oCACR,MAAM;wCACJ,QAAQ;4CAAC;yCAAM;oCACjB;oCACA,KAAK;wCACH,QAAQ;4CAAC;4CAAQ;yCAAO;oCAC1B;gCACF;4BACF;wBACF;oBACF;oBACA,wBAAwB;wBACtB,QAAQ;4BAAC;4BAAS;yBAAc;wBAChC,UAAU;4BACR,QAAQ;gCACN,QAAQ;oCAAC;iCAAM;4BACjB;wBACF;oBACF;oBACA,yBAAyB;wBACvB,QAAQ;4BAAC;yBAAQ;wBACjB,UAAU;4BACR,UAAU;gCACR,QAAQ;oCAAC;oCAAS;oCAAe;iCAAO;gCACxC,UAAU;oCACR,OAAO;wCACL,QAAQ;4CAAC;4CAAQ;4CAAY;yCAAa;oCAC5C;oCACA,WAAW;wCACT,QAAQ;4CAAC;yCAAM;oCACjB;oCACA,YAAY;wCACV,QAAQ;4CAAC;4CAAQ;yCAAM;wCACvB,UAAU;oCACZ;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF,GACA;QACE,kBAAkB;IACpB;IAGF,MAAM,OAAsB,MAAM,iHAAA,CAAA,QAAK,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,OAAO;IACpE,OAAO;AACT;AAEO,MAAM,kBAAkB;IAC7B,MAAM,QAAQ,kIAAA,CAAA,UAAE,CAAC,SAAS,CACxB;QACE,QAAQ;YAAC;SAAQ;QACjB,UAAU;YACR,UAAU;gBACR,QAAQ;oBAAC;oBAAS;iBAAc;gBAChC,UAAU;oBACR,SAAS;wBACP,QAAQ;4BAAC;yBAAM;oBACjB;gBACF;YACF;QACF;IACF,GACA;QACE,kBAAkB;IACpB;IAGF,MAAM,OAA0B,MAAM,iHAAA,CAAA,QAAK,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,OAAO;IACxE,OAAO;AACT"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/app/page.tsx"],"sourcesContent":["import type { IDataHomepage } from 'fetch/homepage'\nimport type { Metadata } from 'next'\n\nimport { DynamicContent } from 'components/DynamicContent'\nimport { Top } from 'components/Top'\nimport { getHomepage, getHomepageMeta } from 'fetch/homepage'\n\nexport async function generateMetadata(): Promise<Metadata> {\n  const meta = await getHomepageMeta()\n\n  return {\n    title: meta.metaData?.title || meta.title,\n    description: meta.metaData?.description || '',\n    openGraph: meta.metaData?.ogImage\n      ? {\n          images: [meta.metaData.ogImage.url],\n        }\n      : null,\n  }\n}\n\nexport default async function Home() {\n  const homepage: IDataHomepage = await getHomepage()\n  return (\n    <>\n      <Top title={homepage.title} items={homepage.products} />\n      <DynamicContent data={homepage.dynamicContent} />\n    </>\n  )\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;;;;;AAEO,eAAe;IACpB,MAAM,OAAO,MAAM,CAAA,GAAA,wHAAA,CAAA,kBAAe,AAAD;IAEjC,OAAO;QACL,OAAO,KAAK,QAAQ,EAAE,SAAS,KAAK,KAAK;QACzC,aAAa,KAAK,QAAQ,EAAE,eAAe;QAC3C,WAAW,KAAK,QAAQ,EAAE,UACtB;YACE,QAAQ;gBAAC,KAAK,QAAQ,CAAC,OAAO,CAAC,GAAG;aAAC;QACrC,IACA;IACN;AACF;AAEe,eAAe;IAC5B,MAAM,WAA0B,MAAM,CAAA,GAAA,wHAAA,CAAA,cAAW,AAAD;IAChD,qBACE;;0BACE,8OAAC,yHAAA,CAAA,MAAG;gBAAC,OAAO,SAAS,KAAK;gBAAE,OAAO,SAAS,QAAQ;;;;;;0BACpD,8OAAC,oIAAA,CAAA,iBAAc;gBAAC,MAAM,SAAS,cAAc;;;;;;;;AAGnD"}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}