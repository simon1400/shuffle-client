{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/DynamicContent.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DynamicContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DynamicContent() from the server but DynamicContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/DynamicContent.tsx <module evaluation>\",\n    \"DynamicContent\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,mEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/DynamicContent.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DynamicContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DynamicContent() from the server but DynamicContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/DynamicContent.tsx\",\n    \"DynamicContent\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+CACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/Slider.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Slider = registerClientReference(\n    function() { throw new Error(\"Attempted to call Slider() from the server but Slider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Slider.tsx <module evaluation>\",\n    \"Slider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,2DACA"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/Slider.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Slider = registerClientReference(\n    function() { throw new Error(\"Attempted to call Slider() from the server but Slider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Slider.tsx\",\n    \"Slider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,uCACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/Top.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Top = registerClientReference(\n    function() { throw new Error(\"Attempted to call Top() from the server but Top is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Top.tsx <module evaluation>\",\n    \"Top\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,MAAM,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,wDACA"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/Top.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Top = registerClientReference(\n    function() { throw new Error(\"Attempted to call Top() from the server but Top is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Top.tsx\",\n    \"Top\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,MAAM,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,oCACA"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/products/Products.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Products = registerClientReference(\n    function() { throw new Error(\"Attempted to call Products() from the server but Products is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/products/Products.tsx <module evaluation>\",\n    \"Products\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,sEACA"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/components/products/Products.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Products = registerClientReference(\n    function() { throw new Error(\"Attempted to call Products() from the server but Products is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/products/Products.tsx\",\n    \"Products\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,kDACA"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/fetch/product.ts"],"sourcesContent":["import qs from 'qs'\n\nimport { Axios } from '../lib/api'\n\nexport interface IDataProduct {\n  title: string\n  description: string\n  benefits: IDescriptionBlock[]\n  image: IDataImage\n  shortIcon: IDataImage\n  content: any\n  compare: IShortProduct[]\n  metaData?: IMetaData\n  label: IDataLabel[]\n  Parameters?: IParameters[]\n}\nexport interface IMetaDataProduct {\n  title: string\n  description: string\n  image: IDataImage\n  metaData?: IMetaData\n}\n\nexport interface IDataAllProducts {\n  title: string\n  description: string\n  slug: string\n  shortContent: string\n  image: IDataImage\n  label: IDataLabel[]\n}\n\nexport const getProduct = async (slug: string) => {\n  const query = qs.stringify(\n    {\n      filters: {\n        slug: {\n          $eq: slug,\n        },\n      },\n      fields: ['title', 'description'],\n      populate: {\n        image: {\n          fields: ['url'],\n        },\n        benefits: {\n          fields: ['contentText'],\n          populate: {\n            icon: {\n              fields: ['url'],\n            },\n            cta: {\n              fields: ['text', 'link'],\n            },\n          },\n        },\n        label: {\n          fields: ['text', 'hexColor', 'invertText'],\n        },\n        Parameters: {\n          fields: ['text', 'has'],\n          populate: '*',\n        },\n        shortIcon: {\n          fields: ['url'],\n        },\n        compare: {\n          fields: ['title', 'description', 'slug'],\n          populate: {\n            label: {\n              fields: ['text', 'hexColor', 'invertText'],\n            },\n            shortIcon: {\n              fields: ['url'],\n            },\n            Parameters: {\n              fields: ['text', 'has'],\n              populate: '*',\n            },\n          },\n        },\n        content: {\n          on: {\n            'content.cta-block': {\n              populate: '*',\n            },\n            'content.short-artciles': {\n              populate: {\n                articles: {\n                  fields: ['title', 'shortContent', 'slug'],\n                  populate: {\n                    shortImage: {\n                      fields: ['url'],\n                    },\n                  },\n                },\n              },\n            },\n            'content.logo-carousel': {\n              populate: {\n                logo: {\n                  fields: ['url'],\n                },\n              },\n            },\n            'content.description-block': {\n              populate: {\n                block: {\n                  fields: ['contentText'],\n                  populate: {\n                    icon: {\n                      fields: ['url'],\n                    },\n                    cta: {\n                      fields: ['text', 'link'],\n                    },\n                  },\n                },\n              },\n            },\n            'content.content-item': {\n              fields: ['title', 'contentText'],\n              populate: {\n                galery: {\n                  fields: ['url'],\n                },\n              },\n            },\n            'content.compare-table': {\n              fields: ['title'],\n              populate: {\n                products: {\n                  fields: ['title', 'description', 'slug'],\n                  populate: {\n                    label: {\n                      fields: ['text', 'hexColor', 'invertText'],\n                    },\n                    shortIcon: {\n                      fields: ['url'],\n                    },\n                    Parameters: {\n                      fields: ['text', 'has'],\n                      populate: '*',\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    {\n      encodeValuesOnly: true, // prettify URL\n    },\n  )\n\n  const data: IDataProduct[] = await Axios.get(`/api/products?${query}`)\n  return data[0]\n}\n\nexport const getAllProducts = async () => {\n  const query = qs.stringify(\n    {\n      fields: ['title', 'description', 'slug', 'shortContent'],\n      populate: {\n        image: {\n          fields: ['url'],\n        },\n        label: {\n          fields: ['text', 'hexColor', 'invertText'],\n        },\n      },\n    },\n    {\n      encodeValuesOnly: true, // prettify URL\n    },\n  )\n\n  const data: IDataAllProducts[] = await Axios.get(`/api/products?${query}`)\n  return data\n}\n\nexport const getProductMeta = async (slug: string) => {\n  const query = qs.stringify(\n    {\n      filters: {\n        slug: {\n          $eq: slug,\n        },\n      },\n      fields: ['title', 'description'],\n      populate: {\n        image: {\n          fields: ['url'],\n        },\n        metaData: {\n          fields: ['title', 'description'],\n          populate: {\n            ogImage: {\n              fields: ['url'],\n            },\n          },\n        },\n      },\n    },\n    {\n      encodeValuesOnly: true, // prettify URL\n    },\n  )\n\n  const data: IMetaDataProduct[] = await Axios.get(`/api/products?${query}`)\n  return data[0]\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///Users/dmytropechunka/Desktop/work/shuffle/client/src/app/%5Bproduct%5D/page.tsx"],"sourcesContent":["import type { IMetaDataProduct } from 'fetch/product'\nimport type { Metadata } from 'next'\n\nimport { Container } from 'components/Container'\nimport { DynamicContent } from 'components/DynamicContent'\nimport { Slider } from 'components/Slider'\nimport { Top } from 'components/Top'\nimport { Products } from 'components/products/Products'\nimport { getProduct, getProductMeta } from 'fetch/product'\nimport Image from 'next/image'\n\ninterface ProductParams {\n  product: string\n}\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ product: string }>\n}): Promise<Metadata> {\n  const { product } = await params\n  const meta = await getProductMeta(product)\n\n  const { metaData, title, description, image }: IMetaDataProduct = meta\n\n  const ogImage = metaData?.ogImage?.url || image?.url\n\n  return {\n    title: metaData?.title || title,\n    description: metaData?.description || description,\n    openGraph: ogImage\n      ? {\n          images: [ogImage],\n        }\n      : undefined,\n  }\n}\n\nexport default async function Product({ params }: { params: Promise<ProductParams> }) {\n  const { product: slug } = await params\n  const product = await getProduct(slug)\n\n  const compareProducts: IShortProduct[] = [\n    ...(product.compare?.length\n      ? [\n          {\n            title: product.title,\n            description: product.description,\n            shortIcon: product.shortIcon,\n            slug: '',\n            label: product.label,\n            Parameters: product.Parameters,\n          },\n        ]\n      : []),\n    ...(product.compare || []),\n  ]\n\n  return (\n    <>\n      <Top title={product.title} label={product.description} />\n      <section className={'-mt-[220px]'}>\n        <Image\n          className={'relative z-20 mx-auto'}\n          src={product.image.url}\n          width={1700}\n          height={990}\n          alt={product.title}\n        />\n        <Container size={'lg'}>\n          <div className={'relative z-10'}>\n            <Slider data={product.benefits} />\n          </div>\n        </Container>\n      </section>\n      <DynamicContent data={product.content} />\n      <section className={'py-17'}>\n        <Container size={'lg'}>\n          <h2 className={'text-5xl md:text-8xl text-center mb-10 md:mb-13'}>\n            {'How to Choose the Best'}\n          </h2>\n          <Products data={compareProducts} />\n        </Container>\n      </section>\n    </>\n  )\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMO,eAAe,iBAAiB,EACrC,MAAM,EAGP;IACC,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM;IAC1B,MAAM,OAAO,MAAM,CAAA,GAAA,uHAAA,CAAA,iBAAc,AAAD,EAAE;IAElC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,GAAqB;IAElE,MAAM,UAAU,UAAU,SAAS,OAAO,OAAO;IAEjD,OAAO;QACL,OAAO,UAAU,SAAS;QAC1B,aAAa,UAAU,eAAe;QACtC,WAAW,UACP;YACE,QAAQ;gBAAC;aAAQ;QACnB,IACA;IACN;AACF;AAEe,eAAe,QAAQ,EAAE,MAAM,EAAsC;IAClF,MAAM,EAAE,SAAS,IAAI,EAAE,GAAG,MAAM;IAChC,MAAM,UAAU,MAAM,CAAA,GAAA,uHAAA,CAAA,aAAU,AAAD,EAAE;IAEjC,MAAM,kBAAmC;WACnC,QAAQ,OAAO,EAAE,SACjB;YACE;gBACE,OAAO,QAAQ,KAAK;gBACpB,aAAa,QAAQ,WAAW;gBAChC,WAAW,QAAQ,SAAS;gBAC5B,MAAM;gBACN,OAAO,QAAQ,KAAK;gBACpB,YAAY,QAAQ,UAAU;YAChC;SACD,GACD,EAAE;WACF,QAAQ,OAAO,IAAI,EAAE;KAC1B;IAED,qBACE;;0BACE,8OAAC,yHAAA,CAAA,MAAG;gBAAC,OAAO,QAAQ,KAAK;gBAAE,OAAO,QAAQ,WAAW;;;;;;0BACrD,8OAAC;gBAAQ,WAAW;;kCAClB,8OAAC,6HAAA,CAAA,UAAK;wBACJ,WAAW;wBACX,KAAK,QAAQ,KAAK,CAAC,GAAG;wBACtB,OAAO;wBACP,QAAQ;wBACR,KAAK,QAAQ,KAAK;;;;;;kCAEpB,8OAAC,+HAAA,CAAA,YAAS;wBAAC,MAAM;kCACf,cAAA,8OAAC;4BAAI,WAAW;sCACd,cAAA,8OAAC,4HAAA,CAAA,SAAM;gCAAC,MAAM,QAAQ,QAAQ;;;;;;;;;;;;;;;;;;;;;;0BAIpC,8OAAC,oIAAA,CAAA,iBAAc;gBAAC,MAAM,QAAQ,OAAO;;;;;;0BACrC,8OAAC;gBAAQ,WAAW;0BAClB,cAAA,8OAAC,+HAAA,CAAA,YAAS;oBAAC,MAAM;;sCACf,8OAAC;4BAAG,WAAW;sCACZ;;;;;;sCAEH,8OAAC,0IAAA,CAAA,WAAQ;4BAAC,MAAM;;;;;;;;;;;;;;;;;;;AAK1B"}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}